yytext: int		token: KW_INT		line_number: 3
yytext: i		token: VARIABLE		line_number: 3
yytext: ;		token: FINISH_LINECODE		line_number: 3
yytext: dbl		token: KW_DOUBLE		line_number: 4
yytext: val		token: VARIABLE		line_number: 4
yytext: =		token: ASSIGN_VALUE		line_number: 4
yytext: 2.5		token: FLT_CONST		line_number: 4
yytext: ,		token: SINGLE_COMMA		line_number: 4
yytext: res		token: VARIABLE		line_number: 4
yytext: [		token: OPEN_BRACK		line_number: 4
yytext: 10		token: INT_CONST		line_number: 4
yytext: ]		token: CLOSE_BRACK		line_number: 4
yytext: ;		token: FINISH_LINECODE		line_number: 4
yytext: for		token: KW_FOR		line_number: 6
yytext: (		token: OPEN_PAREN		line_number: 6
yytext: i		token: VARIABLE		line_number: 6
yytext: =		token: ASSIGN_VALUE		line_number: 6
yytext: 0		token: INT_CONST		line_number: 6
yytext: ;		token: FINISH_LINECODE		line_number: 6
yytext: i		token: VARIABLE		line_number: 6
yytext: <		token: OP_RBIG		line_number: 6
yytext: 10		token: INT_CONST		line_number: 6
yytext: ;		token: FINISH_LINECODE		line_number: 6
yytext: i		token: VARIABLE		line_number: 6
yytext: ++		token: OP_INCR		line_number: 6
yytext: )		token: CLOSE_PAREN		line_number: 6
yytext: {		token: OPEN_BRACE		line_number: 6
yytext: res		token: VARIABLE		line_number: 7
yytext: [		token: OPEN_BRACK		line_number: 7
yytext: i		token: VARIABLE		line_number: 7
yytext: ]		token: CLOSE_BRACK		line_number: 7
yytext: =		token: ASSIGN_VALUE		line_number: 7
yytext: opr		token: VARIABLE		line_number: 7
yytext: (		token: OPEN_PAREN		line_number: 7
yytext: val		token: VARIABLE		line_number: 7
yytext: ,		token: SINGLE_COMMA		line_number: 7
yytext: i		token: VARIABLE		line_number: 7
yytext: )		token: CLOSE_PAREN		line_number: 7
yytext: ;		token: FINISH_LINECODE		line_number: 7
yytext: val		token: VARIABLE		line_number: 8
yytext: =		token: ASSIGN_VALUE		line_number: 8
yytext: res		token: VARIABLE		line_number: 8
yytext: [		token: OPEN_BRACK		line_number: 8
yytext: i		token: VARIABLE		line_number: 8
yytext: ]		token: CLOSE_BRACK		line_number: 8
yytext: ;		token: FINISH_LINECODE		line_number: 8
yytext: prnt		token: KW_PRINT		line_number: 9
yytext: (		token: OPEN_PAREN		line_number: 9
yytext: res		token: VARIABLE		line_number: 9
yytext: [		token: OPEN_BRACK		line_number: 9
yytext: i		token: VARIABLE		line_number: 9
yytext: ]		token: CLOSE_BRACK		line_number: 9
yytext: )		token: CLOSE_PAREN		line_number: 9
yytext: ;		token: FINISH_LINECODE		line_number: 9
yytext: prnt		token: KW_PRINT		line_number: 10
yytext: (		token: OPEN_PAREN		line_number: 10
yytext: '\n'		token: CHR_CONST		line_number: 10
yytext: )		token: CLOSE_PAREN		line_number: 10
yytext: ;		token: FINISH_LINECODE		line_number: 10
yytext: }		token: CLOSE_BRACE		line_number: 11
yytext: rtn		token: KW_RETURN		line_number: 12
yytext: ;		token: FINISH_LINECODE		line_number: 12
yytext: dbl		token: KW_DOUBLE		line_number: 14
yytext: opr		token: VARIABLE		line_number: 14
yytext: (		token: OPEN_PAREN		line_number: 14
yytext: dbl		token: KW_DOUBLE		line_number: 14
yytext: val		token: VARIABLE		line_number: 14
yytext: ,		token: SINGLE_COMMA		line_number: 14
yytext: int		token: KW_INT		line_number: 14
yytext: i		token: VARIABLE		line_number: 14
yytext: )		token: CLOSE_PAREN		line_number: 14
yytext: {		token: OPEN_BRACE		line_number: 14
yytext: dbl		token: KW_DOUBLE		line_number: 16
yytext: res		token: VARIABLE		line_number: 16
yytext: ;		token: FINISH_LINECODE		line_number: 16
yytext: res		token: VARIABLE		line_number: 18
yytext: =		token: ASSIGN_VALUE		line_number: 18
yytext: val		token: VARIABLE		line_number: 18
yytext: *		token: OP_MUL		line_number: 18
yytext: i		token: VARIABLE		line_number: 18
yytext: +		token: OP_ADD		line_number: 18
yytext: i		token: VARIABLE		line_number: 18
yytext: ;		token: FINISH_LINECODE		line_number: 18
yytext: rtn		token: KW_RETURN		line_number: 19
yytext: res		token: VARIABLE		line_number: 19
yytext: ;		token: FINISH_LINECODE		line_number: 19
yytext: }		token: CLOSE_BRACE		line_number: 20
